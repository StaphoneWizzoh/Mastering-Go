STRUCTURES

> Structures and Go types are usually defined outside the main() functon in order that they have a global scope and are available to the entire Go package, unless you wwant to calrify that a type is only useful within the current scope and is not expected to be used elsewhere.

> When you assign a structure to an array of structures, the structure is copied into the array so changing the value of the original structure will have no effect on the objects of the array.

> Two structures with the same fields will not be considered identical in Go if their fields are nor exactly the same order.

^ Using the new keyword

*new* returns the memory address of the allocated object i.e. new returns a pointer
Variables created with make are properly initialized without just zeroing the allocated memory space, make does not return a pointer unlike new.

TUPLES

> It is a finite ordered liat with multiple parts e.g a functon that returns two values that you get in a single statement

> Go does not support the tuple type

> If you do not care about one or more return values of a function, you can put an underscore character(_) in their place.

REGULAR EXPRESSIONS AND PATTERN MATCHING

> Pattern matching is a technique for searching a string for some set of characters based on some specific search pattern that is based on regular expressions and grammars